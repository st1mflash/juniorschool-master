package ru.liga.dcs.lesson09;

import ru.liga.dcs.lesson09.domain.WordFrequency;

import java.util.Collections;
import java.util.List;

/**
 * Класс BookStatistics предназначен для анализа текстовых файлов,
 * особенно больших литературных произведений, и вычисления статистики
 * по частоте встречаемости слов длиной более пяти символов.
 * Этот класс читает текстовый файл, обрабатывает его содержимое и
 * идентифицирует десять самых часто встречающихся слов длиной более
 * пяти символов, предоставляя их в виде списка объектов WordFrequency.
 * <p>
 * Пример использования:
 * <pre>
 * {@code
 * BookStatistics stats = new BookStatistics();
 * List<WordFrequency> topWords = stats.analyzeBook("path/to/book.txt");
 * topWords.forEach(System.out::println);
 * }
 * </pre>
 * <p>
 * Путь к файлу для анализа должен быть указан в виде строки.
 * Результатом работы метода analyzeBook является список объектов WordFrequency,
 * каждый из которых содержит слово и количество его вхождений в тексте.
 * <p>
 * Тестовые данные:
 * Тестовый файл для анализа (например, "voina-i-mir.txt") должен находиться
 * в каталоге ресурсов тестов, обычно это "src/test/resources/" в структуре проекта.
 * Убедитесь, что файл имеет соответствующий текст для анализа.
 * <p>
 * !!! Для этого класса необходимо написать тесты
 * <br/>
 * !!! Использовать потоковое чтение
 */
public class BookStatistics03 {

    /**
     * Анализирует заданный текстовый файл и возвращает статистику
     * по десяти самым часто встречающимся словам длиной более пяти символов.
     *
     * @param filePath Путь к файлу для анализа.
     * @return Список объектов WordFrequency, представляющих десять
     * самых часто встречающихся слов и их частоту.
     */
    public List<WordFrequency> analyzeBook(String filePath) {
        // Реализация метода
        return Collections.emptyList();
    }
}
